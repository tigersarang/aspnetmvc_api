@model CommLibs.Models.Product

@{
    ViewData["Title"] = "Detail";
}

<style>
    .note-editor.note-airframe .note-editing-area .note-editable[contenteditable=false],
    .note-editor.note-frame .note-editing-area .note-editable[contenteditable=false] {
        background-color: #fff; /* 흰색 배경 */
    }

    .note-statusbar {
        display: none;
    }
</style>

<dt class="mt-lg-5">
    <h4>@Html.DisplayFor(model => model.Name)</h4>
    <input type="hidden" id="productId" value="@Model.Id" />

    <hr />
    <div class="row border-0">
        <div class="form-control border-0 mt-3">
            <textarea asp-for="Content" class="form-control summernote border-0"></textarea>
        </div>
        <div class="text-end col">@Html.DisplayFor(model => model.User.UserName) @Html.DisplayFor(model => model.CreatedDate)</div>

    </div>
</dt>
<div class="text-center">
    @if (Context.Session.GetString("UserId") == Model.User.Id.ToString())
    {
        @Html.ActionLink("Update", "Update", new { id = Model.Id}, new {@class="btn btn-primary"})
        <button type="button" class="btn btn-danger" id="btnDelete">Delete</button>
    }


    <a href="#" class="btn btn-dark" onclick="history.back()">Back to List</a>

</div>

<div class="card mt-4 border-0">
    <div class="card-body  border-0">
        <h5 class="card-title border-0">댓글 등록</h5>

        <div class="form-group">
            <input type="hidden" name="id" value="@Model.Id" />
            <textarea class="form-control" id="replyContent" rows="3" placeholder="댓글을 입력하세요"></textarea>
        </div>
        <button type="submit" class="badge btn-primary mt-3 add-comment">등록</button>

    </div>
</div>

<div class="card mt-4 border-0">
    <div class="card-body">

        <div class="my-3 p-3 rounded shadow-sm">
            <h6 class="border-bottom pb-2 mb-0" id="commentList">댓글</h6>

            @foreach (var item in Model.Replies)
            {
                <div class="d-flex text-muted pt-3" id="comment-@item.Id">
                    <div class="pb-3 mb-0 small lh-sm border-bottom w-100">
                        <div class="d-flex justify-content-between">
                            <strong class="text-gray-dark">@item.Content</strong>
                            @if (Context.Session.GetString("UserId") == item.User.Id.ToString())
                            {
                                <button type="button" class="badge btn-danger btn-sm delete-comment" data-comment-id="@item.Id">삭제</button>
                            }
                        </div>
                        <span class="d-block">@item.User.UserName @item.CreatedDate</span>
                    </div>
                </div>

                <!-- 댓글들이 여기에 위치... -->
                @*
            <h5 class="card-title mb-3" id="commentList">댓글 목록</h5>

            <div class="comment mt-2 d-flex justify-content-between align-items-center" id="comment-@item.Id">
            <p>@item.Content</p>

            </div>
            <div class="text-end">@item.User.UserName @item.CreatedDate</div>
            *@
                <!-- 위의 댓글 div를 댓글 수만큼 반복 -->
            }
        </div>

    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            $('.summernote').summernote();

            $(".add-comment").click(function () {
                let reply = {
                    id: 0,
                    content: $("#replyContent").val(),
                    productId: $("#productId").val(),
                    product: null,
                    userId: 0,
                    user: null
                };

                $.ajax({
                    url: "/Reply/Create",
                    type: "POST",
                    data: JSON.stringify(reply),
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        let recvDate = new Date(data.createdDate);

                        let date = new Date();
                        let hours = date.getHours();
                        let minutes = date.getMinutes();
                        let seconds = date.getSeconds();

                        let ampm = hours >= 12 ? '오후' : '오전';
                        hours = hours % 12;
                        hours = hours ? hours : 12; // the hour '0' should be '12'
                        minutes = minutes < 10 ? '0' + minutes : minutes;
                        seconds = seconds < 10 ? '0' + seconds : seconds;

                        let strTime = ampm + ' ' + hours + ':' + minutes + ':' + seconds;


                        let formattedDate = recvDate.getFullYear() + '-'
                            + String(recvDate.getMonth() + 1).padStart(2, '0') + '-'
                            + String(recvDate.getDate()).padStart(2, '0') + " "
                            + strTime
                            ;

                        $("#commentList").after(
                            `<div class="d-flex text-muted pt-3" id="comment-${data.id}">
                                                <div class="pb-3 mb-0 small lh-sm border-bottom w-100">
                                                    <div class="d-flex justify-content-between">
                                                        <strong class="text-gray-dark">${data.content}</strong>
                                                        <button type="button" class="badge btn-danger btn-sm delete-comment" data-comment-id="${data.id}">삭제</button>
                                                    </div>
                                                            <span class="d-block">${data.user.userName} ${formattedDate}</span>
                                                </div>
                                            </div>`
                        )

                        //$("#commentList").after(
                        //    `<div class="comment mt-2 d-flex justify-content-between align-items-center" id="comment-${data.id}">
                        //                        <p>${data.content}</p>
                        //                        <button type="button" class="btn btn-danger btn-sm delete-comment" data-comment-id="${data.id}">삭제</button>
                        //                    </div>`);
                    },
                    error: function (data) {
                        alert("댓글 등록에 실패했습니다.");
                    }
                });
            });

            $("#btnDelete").click(function () {
                var productId = $("#productId").val();

                $.ajax({
                    url: '/Product/Delete/' + productId,
                    type: "Delete",
                    success: function (data) {
                        location.href = "/Product/Index";
                    },
                    error: function (data) {
                        alert("상품 삭제에 실패했습니다.");
                    }
                });
            });


        });

        $(document).on('click', '.delete-comment', function () {
            var commentId = $(this).data("comment-id");

            $.ajax({
                url: '/Reply/Delete/' + commentId,
                type: "Delete",
                success: function (data) {
                    $("#comment-" + commentId).remove();
                },
                error: function (data) {
                    alert("댓글 삭제에 실패했습니다.");
                }
            });
        });

        $(".summernote").summernote({
            minHeight: null,
            maxHeight: null,
            focus: true,
            disableResizeEditor: true,
            toolbar: []
        });

        $(".summernote").summernote('disable');
    </script>
    }
